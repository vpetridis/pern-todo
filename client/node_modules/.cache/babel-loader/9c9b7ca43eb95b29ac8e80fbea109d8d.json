{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Developing\\\\WebDev\\\\pern-todo\\\\client\\\\src\\\\components\\\\ListTodo.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from \"react\";\nimport { Card, Container, Row, Col, CardText, CardBody, CardTitle, CardSubtitle, Button, Spinner } from \"reactstrap\";\nimport EditTodo from \"./EditTodo\";\nexport default function ListTodo() {\n  _s();\n\n  const [todo, setTodo] = useState();\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n/* export default class ListTodo extends Component {\r\n  state = { todo: [{ todo_id: null, description: \"\" }], isLoading: false };\r\n\r\n  componentDidMount() {\r\n    //READ THE ANSWER HERE: https://stackoverflow.com/questions/55324088/why-do-i-have-to-refresh-page-manually-after-delete\r\n    this.setState({ isLoading: true });\r\n\r\n    fetch(\"http://localhost:5000/todos\")\r\n      .then((res) => res.json())\r\n      .then((result) =>\r\n        this.setState({ todo: result, isLoading: false }, console.log(result))\r\n      );\r\n  }\r\n  deleteTodo = async (id) => {\r\n    const { todo } = this.state;\r\n    try {\r\n      const deleteTodo = await fetch(`http://localhost:5000/todos/${id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n\r\n      this.setState({ todo: todo.filter((todo) => todo.todo_id !== id) });\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n  updateDescription = (childData) => {\r\n    this.setState({ todo: childData });\r\n    //create fetch PUT METHOD\r\n  };\r\n\r\n  render() {\r\n    if (this.state.isLoading) {\r\n      return (\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            {\" \"}\r\n            <Spinner color=\"primary\" />\r\n          </Row>\r\n        </Container>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        {this.state.todo.map((todo) => (\r\n          <Card key={todo.todo_id}>\r\n            <CardBody>\r\n              <CardTitle tag=\"h5\">Description</CardTitle>{\" \"}\r\n              <CardText>{todo.description} </CardText>\r\n              <EditTodo updateDescription={this.updateDescription} />\r\n              <Button\r\n                color=\"danger\"\r\n                onClick={() => this.deleteTodo(todo.todo_id)}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </CardBody>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n */\n\n_s(ListTodo, \"5v47Zqquqs8VODg9wsFf042HdmY=\");\n\n_c = ListTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTodo\");","map":{"version":3,"sources":["D:/Developing/WebDev/pern-todo/client/src/components/ListTodo.js"],"names":["React","Component","useState","useEffect","Card","Container","Row","Col","CardText","CardBody","CardTitle","CardSubtitle","Button","Spinner","EditTodo","ListTodo","todo","setTodo"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SACEC,IADF,EAEEC,SAFF,EAGEC,GAHF,EAIEC,GAJF,EAKEC,QALF,EAMEC,QANF,EAOEC,SAPF,EAQEC,YARF,EASEC,MATF,EAUEC,OAVF,QAWO,YAXP;AAYA,OAAOC,QAAP,MAAqB,YAArB;AAGA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACnC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,EAAhC;AACE,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;AAID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAzEwBa,Q;;KAAAA,Q","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Button,\r\n  Spinner,\r\n} from \"reactstrap\";\r\nimport EditTodo from \"./EditTodo\";\r\n\r\n\r\nexport default function ListTodo() {\r\nconst [todo, setTodo] = useState()\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n/* export default class ListTodo extends Component {\r\n  state = { todo: [{ todo_id: null, description: \"\" }], isLoading: false };\r\n\r\n  componentDidMount() {\r\n    //READ THE ANSWER HERE: https://stackoverflow.com/questions/55324088/why-do-i-have-to-refresh-page-manually-after-delete\r\n    this.setState({ isLoading: true });\r\n\r\n    fetch(\"http://localhost:5000/todos\")\r\n      .then((res) => res.json())\r\n      .then((result) =>\r\n        this.setState({ todo: result, isLoading: false }, console.log(result))\r\n      );\r\n  }\r\n  deleteTodo = async (id) => {\r\n    const { todo } = this.state;\r\n    try {\r\n      const deleteTodo = await fetch(`http://localhost:5000/todos/${id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n\r\n      this.setState({ todo: todo.filter((todo) => todo.todo_id !== id) });\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n  updateDescription = (childData) => {\r\n    this.setState({ todo: childData });\r\n    //create fetch PUT METHOD\r\n  };\r\n\r\n  render() {\r\n    if (this.state.isLoading) {\r\n      return (\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            {\" \"}\r\n            <Spinner color=\"primary\" />\r\n          </Row>\r\n        </Container>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        {this.state.todo.map((todo) => (\r\n          <Card key={todo.todo_id}>\r\n            <CardBody>\r\n              <CardTitle tag=\"h5\">Description</CardTitle>{\" \"}\r\n              <CardText>{todo.description} </CardText>\r\n              <EditTodo updateDescription={this.updateDescription} />\r\n              <Button\r\n                color=\"danger\"\r\n                onClick={() => this.deleteTodo(todo.todo_id)}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </CardBody>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n */"]},"metadata":{},"sourceType":"module"}