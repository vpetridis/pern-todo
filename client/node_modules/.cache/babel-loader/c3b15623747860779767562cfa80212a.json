{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\SOURCE\\\\WebDev\\\\pern-todo\\\\client\\\\src\\\\components\\\\InputTodo.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"reactstrap\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst ColorInput = props => {\n  _s();\n\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n\n  const handleSuccess = e => {\n    const {\n      color\n    } = e.target;\n    setColor(\"success\");\n  };\n\n  const handleImportant = e => {\n    const {\n      color\n    } = e.target;\n    setColor(\"warning\");\n  };\n\n  const handleOverdue = e => {\n    const {\n      color\n    } = e.target;\n    setColor(\"danger\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    className: \"mx-2\",\n    isOpen: dropdownOpen,\n    toggle: toggle,\n    children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n      outline: true,\n      color: \"primary\",\n      caret: true,\n      children: \"Color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n      children: [/*#__PURE__*/_jsxDEV(DropdownItem, {\n        onClick: handleSuccess,\n        children: \"Default\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n        onClick: handleImportant,\n        children: \"Important\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n        onClick: handleOverdue,\n        children: \"Overdue!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ColorInput, \"z5Nkh6K+y+CV4vT0AOyJ2ID9tJg=\");\n\n_c = ColorInput;\n\nconst InputTodo = () => {\n  _s2();\n\n  const [description, setDescription] = useState(\"\");\n  const [color, setColor] = useState(\"\");\n\n  const onSubmitForm = async e => {\n    const notify = () => toast.info(\"You need to add a description!\", {\n      position: toast.POSITION.TOP_CENTER\n    });\n\n    {\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: notify,\n          children: \"Notify !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this);\n    }\n    e.preventDefault();\n\n    if (description === \"\") {\n      console.log(\"no input\");\n      notify();\n    } else try {\n      const todo = {\n        description: `${description}`,\n        colors: `${color}`\n      };\n      const response = await fetch(\"http://localhost:5000/todos\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(todo)\n      });\n      window.location = \"/\";\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const handelInput = e => {\n    const {\n      value\n    } = e.target;\n    setDescription(value);\n  };\n  /* COLOR DROPDOWN */\n\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"d-flex\",\n      onSubmit: onSubmitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control mr-1 shadow-sm p-3 \",\n        value: description,\n        onChange: handelInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ColorInput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(InputTodo, \"Kn8ofOSo7UE94Wuqa4rVLdPsQrg=\");\n\n_c2 = InputTodo;\nexport default InputTodo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ColorInput\");\n$RefreshReg$(_c2, \"InputTodo\");","map":{"version":3,"sources":["C:/SOURCE/WebDev/pern-todo/client/src/components/InputTodo.js"],"names":["React","Fragment","useState","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","ToastContainer","toast","ColorInput","props","dropdownOpen","setDropdownOpen","toggle","prevState","handleSuccess","e","color","target","setColor","handleImportant","handleOverdue","InputTodo","description","setDescription","onSubmitForm","notify","info","position","POSITION","TOP_CENTER","preventDefault","console","log","todo","colors","response","fetch","method","headers","body","JSON","stringify","window","location","err","error","message","handelInput","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst ColorInput = (props) => {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n\r\n  const handleSuccess = (e) => {\r\n    const { color } = e.target;\r\n    setColor(\"success\");\r\n  };\r\n  const handleImportant = (e) => {\r\n    const { color } = e.target;\r\n    setColor(\"warning\");\r\n  };\r\n  const handleOverdue = (e) => {\r\n    const { color } = e.target;\r\n    setColor(\"danger\");\r\n  };\r\n  return (\r\n    <Dropdown className=\"mx-2\" isOpen={dropdownOpen} toggle={toggle}>\r\n      <DropdownToggle outline color=\"primary\" caret>\r\n        Color\r\n      </DropdownToggle>\r\n      <DropdownMenu>\r\n        <DropdownItem onClick={handleSuccess}>Default</DropdownItem>\r\n        <DropdownItem onClick={handleImportant}>Important</DropdownItem>\r\n        <DropdownItem onClick={handleOverdue}>Overdue!</DropdownItem>\r\n      </DropdownMenu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nconst InputTodo = () => {\r\n  const [description, setDescription] = useState(\"\");\r\n  const [color, setColor] = useState(\"\");\r\n\r\n  const onSubmitForm = async (e) => {\r\n    const notify = () =>\r\n      toast.info(\"You need to add a description!\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n    {\r\n      <div>\r\n        <button onClick={notify}>Notify !</button>\r\n      </div>;\r\n    }\r\n\r\n    e.preventDefault();\r\n    if (description === \"\") {\r\n      console.log(\"no input\");\r\n      notify();\r\n    } else\r\n      try {\r\n        const todo = {\r\n          description: `${description}`,\r\n          colors: `${color}`,\r\n        };\r\n        const response = await fetch(\"http://localhost:5000/todos\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(todo),\r\n        });\r\n        window.location = \"/\";\r\n      } catch (err) {\r\n        console.error(err.message);\r\n      }\r\n  };\r\n\r\n  const handelInput = (e) => {\r\n    const { value } = e.target;\r\n    setDescription(value);\r\n  };\r\n\r\n  /* COLOR DROPDOWN */\r\n\r\n  return (\r\n    <Fragment>\r\n      <ToastContainer />\r\n      <form className=\"d-flex\" onSubmit={onSubmitForm}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control mr-1 shadow-sm p-3 \"\r\n          value={description}\r\n          onChange={handelInput}\r\n        />\r\n        <button className=\"btn btn-success\">Add</button>\r\n        <ColorInput />\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default InputTodo;\r\n"]},"metadata":{},"sourceType":"module"}