{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Developing\\\\WebDev\\\\pern-todo\\\\client\\\\src\\\\components\\\\EditTodo.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { Component, useState } from \"react\";\nimport { Button } from \"reactstrap\";\nimport { Modal } from \"react-bootstrap\";\n\nconst EditTodo = ({\n  todos\n}) => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [modalShow, setModalShow] = useState(false);\n\n  const MyVerticallyCenteredModal = props => {\n    _s();\n\n    const [description, setDescription] = useState(todos.description);\n    const [id, setId] = useState(todos.todo_id);\n\n    const updateTodo = id => {\n      const body = {\n        description\n      };\n      const response = fetch(`http:\\\\localhost:5000\\todos${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      setDescription(response);\n    };\n\n    return /*#__PURE__*/_jsxDEV(Modal, { ...props,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"m-4\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: () => updateTodo([id]),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(MyVerticallyCenteredModal, \"fXTdwdI9S0QYoAei1cCtb81h3Yo=\");\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"mr-2\",\n      color: \"warning\",\n      onClick: () => setModalShow(true),\n      children: [\"Edit\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyVerticallyCenteredModal, {\n      show: modalShow,\n      onHide: () => setModalShow(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(EditTodo, \"xuPPltV/3J92+XaNotdpXxySp+I=\");\n\n_c = EditTodo;\nexport default EditTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditTodo\");","map":{"version":3,"sources":["D:/Developing/WebDev/pern-todo/client/src/components/EditTodo.js"],"names":["React","Component","useState","Button","Modal","EditTodo","todos","modalShow","setModalShow","MyVerticallyCenteredModal","props","description","setDescription","id","setId","todo_id","updateTodo","body","response","fetch","method","headers","JSON","stringify","e","target","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,KAAT,QAAsB,iBAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;;AACA,QAAMO,yBAAyB,GAAIC,KAAD,IAAW;AAAA;;AAC3C,UAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAACI,KAAK,CAACK,WAAP,CAA9C;AACA,UAAM,CAACE,EAAD,EAAKC,KAAL,IAAcZ,QAAQ,CAACI,KAAK,CAACS,OAAP,CAA5B;;AACA,UAAMC,UAAU,GAAIH,EAAD,IAAQ;AACzB,YAAMI,IAAI,GAAG;AAAEN,QAAAA;AAAF,OAAb;AACA,YAAMO,QAAQ,GAAGC,KAAK,CAAE,8BAA6BN,EAAG,EAAlC,EAAqC;AACzDO,QAAAA,MAAM,EAAE,KADiD;AAEzDC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFgD;AAGzDJ,QAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAeN,IAAf;AAHmD,OAArC,CAAtB;AAKAL,MAAAA,cAAc,CAACM,QAAD,CAAd;AACD,KARD;;AAWA,wBACE,QAAC,KAAD,OACMR,KADN;AAEE,MAAA,IAAI,EAAC,IAFP;AAGE,yBAAgB,+BAHlB;AAIE,MAAA,QAAQ,MAJV;AAAA,8BAME,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA,+BACE,QAAC,KAAD,CAAO,KAAP;AAAa,UAAA,EAAE,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF,eASE,QAAC,KAAD,CAAO,IAAP;AAAA,+BACE;AAAM,UAAA,SAAS,EAAC,KAAhB;AAAA,iCACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,SAAS,EAAC,cAFZ;AAE2B,YAAA,KAAK,EAAEC,WAFlC;AAGE,YAAA,QAAQ,EAAGa,CAAD,IAAOZ,cAAc,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV;AAHjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF,eAkBE,QAAC,KAAD,CAAO,MAAP;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,OAAO,EAAE,MAAMV,UAAU,CAAC,CAACH,EAAD,CAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA0BD,GAxCD;;AAF8B,KAExBJ,yBAFwB;;AA2C9B,sBACE;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,OAAO,EAAE,MAAMD,YAAY,CAAC,IAAD,CAH7B;AAAA,yBAKO,GALP;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,yBAAD;AACE,MAAA,IAAI,EAAED,SADR;AAEE,MAAA,MAAM,EAAE,MAAMC,YAAY,CAAC,KAAD;AAF5B;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,kBADF;AAgBD,CA3DD;;IAAMH,Q;;KAAAA,Q;AA6DN,eAAeA,QAAf","sourcesContent":["import React, { Component, useState } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nconst EditTodo = ({ todos }) => {\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const MyVerticallyCenteredModal = (props) => {\r\n    const [description, setDescription] = useState(todos.description);\r\n    const [id, setId] = useState(todos.todo_id)\r\n    const updateTodo = (id) => {\r\n      const body = { description };\r\n      const response = fetch(`http:\\\\localhost:5000\\todos${id}`, {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n      setDescription(response);\r\n    };\r\n\r\n\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">Edit</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <form className=\"m-4\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\" value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            />\r\n          </form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button color=\"primary\" onClick={() => updateTodo([id])}>\r\n            Save\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <Button\r\n        className=\"mr-2\"\r\n        color=\"warning\"\r\n        onClick={() => setModalShow(true)}\r\n      >\r\n        Edit{\" \"}\r\n      </Button>\r\n\r\n      <MyVerticallyCenteredModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditTodo;\r\n"]},"metadata":{},"sourceType":"module"}