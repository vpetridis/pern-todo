{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Developing\\\\WebDev\\\\pern-todo\\\\client\\\\src\\\\components\\\\ListTodo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport { Card, CardText, Container, Row, CardBody, CardTitle, Button, Spinner } from \"reactstrap\";\nimport EditTodo from \"./EditTodo\";\nimport GridLayout from 'react-grid-layout';\n\nclass MyFirstGrid extends React.Component {\n  render() {\n    // layout is an array of objects, see the demo for more complete usage\n    const layout = [{\n      i: 'a',\n      x: 0,\n      y: 0,\n      w: 1,\n      h: 2,\n      static: true\n    }, {\n      i: 'b',\n      x: 1,\n      y: 0,\n      w: 3,\n      h: 2,\n      minW: 2,\n      maxW: 4\n    }, {\n      i: 'c',\n      x: 4,\n      y: 0,\n      w: 1,\n      h: 2\n    }];\n    return /*#__PURE__*/_jsxDEV(GridLayout, {\n      className: \"layout\",\n      layout: layout,\n      cols: 12,\n      rowHeight: 30,\n      width: 1200,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"a\"\n      }, \"a\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"b\"\n      }, \"b\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"c\"\n      }, \"c\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst ListTodos = () => {\n  _s();\n\n  const [todo, setTodos] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n\n  const deleteTodo = async id => {\n    try {\n      const respone = await fetch(`http://localhost:5000/todos/${id}`, {\n        method: \"DELETE\"\n      });\n      setTodos(todo.filter(todo => todo.todo_id !== id));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const getTodos = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/todos\");\n      const jsonData = await response.json();\n      setTodos(jsonData);\n      setLoading(false);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getTodos();\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(Spinner, {\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: todo.map(todo => /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n          tag: \"h5\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(CardText, {\n          children: [todo.description, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EditTodo, {\n          todos: todo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"danger\",\n          onClick: () => deleteTodo(todo.todo_id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, todo.todo_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)).reverse()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListTodos, \"eKHWQUnbLvXTn70pxBWLD18DT00=\");\n\n_c = ListTodos;\nexport { ListTodos as default, MyFirstGrid };\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTodos\");","map":{"version":3,"sources":["D:/Developing/WebDev/pern-todo/client/src/components/ListTodo.js"],"names":["React","useState","useEffect","Fragment","Card","CardText","Container","Row","CardBody","CardTitle","Button","Spinner","EditTodo","GridLayout","MyFirstGrid","Component","render","layout","i","x","y","w","h","static","minW","maxW","ListTodos","todo","setTodos","isLoading","setLoading","deleteTodo","id","respone","fetch","method","filter","todo_id","error","console","getTodos","response","jsonData","json","err","message","map","description","reverse","default"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\r\nimport {\r\n  Card,\r\n  CardText,\r\n  Container,\r\n  Row,\r\n  CardBody,\r\n  CardTitle,\r\n  Button,\r\n  Spinner,\r\n} from \"reactstrap\";\r\nimport EditTodo from \"./EditTodo\";\r\nimport GridLayout from 'react-grid-layout';\r\n\r\nclass MyFirstGrid extends React.Component {\r\n  render() {\r\n    // layout is an array of objects, see the demo for more complete usage\r\n    const layout = [\r\n      {i: 'a', x: 0, y: 0, w: 1, h: 2, static: true},\r\n      {i: 'b', x: 1, y: 0, w: 3, h: 2, minW: 2, maxW: 4},\r\n      {i: 'c', x: 4, y: 0, w: 1, h: 2}\r\n    ];\r\n    return (\r\n      <GridLayout className=\"layout\" layout={layout} cols={12} rowHeight={30} width={1200}>\r\n        <div key=\"a\">a</div>\r\n        <div key=\"b\">b</div>\r\n        <div key=\"c\">c</div>\r\n      </GridLayout>\r\n    )\r\n  }\r\n}\r\nconst ListTodos = () => {\r\n  const [todo, setTodos] = useState([]);\r\n  const [isLoading, setLoading] = useState(true);\r\n\r\n  const deleteTodo = async (id) => {\r\n    try {\r\n      const respone = await fetch(`http://localhost:5000/todos/${id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n      setTodos(todo.filter((todo) => todo.todo_id !== id));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const getTodos = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/todos\");\r\n      const jsonData = await response.json();\r\n      setTodos(jsonData);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTodos();\r\n  }, []);\r\n  if (isLoading) {\r\n    return (\r\n      <Container>\r\n        <Row className=\"justify-content-center\">\r\n          {\" \"}\r\n          <Spinner color=\"primary\" />\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n  return (\r\n    <Fragment>\r\n      {todo.map((todo) => (\r\n        <Card key={todo.todo_id}>\r\n          <CardBody>\r\n            <CardTitle tag=\"h5\">Description</CardTitle>{\" \"}\r\n            <CardText>{todo.description} </CardText>\r\n            <EditTodo todos={todo} />\r\n            <Button color=\"danger\" onClick={() => deleteTodo(todo.todo_id)}>\r\n              Delete\r\n            </Button>\r\n          </CardBody>\r\n        </Card>\r\n      )).reverse()}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport {ListTodos as default, MyFirstGrid};\r\n"]},"metadata":{},"sourceType":"module"}