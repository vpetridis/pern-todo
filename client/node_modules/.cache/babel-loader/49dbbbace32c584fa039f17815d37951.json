{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Developing\\\\WebDev\\\\pern-todo\\\\client\\\\src\\\\components\\\\ListTodo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport { Card, Col, CardText, Container, Row, CardBody, CardTitle, Spinner } from \"reactstrap\";\nimport { Button } from \"react-bootstrap\";\nimport EditTodo from \"./EditTodo\";\n\nconst ListTodos = () => {\n  _s();\n\n  const [todo, setTodos] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n\n  const getTodos = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/todos\");\n      const jsonData = await response.json();\n      setTodos(jsonData);\n      setLoading(false);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const deleteTodo = async id => {\n    try {\n      const respone = await fetch(`http://localhost:5000/todos/${id}`, {\n        method: \"DELETE\"\n      });\n      setTodos(todo.filter(todo => todo.todo_id !== id));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    getTodos();\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(Spinner, {\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n  const ToasterElement = /*#__PURE__*/React.createElement(\"div\", {}, \"toaster is here\");\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToasterElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [\" \", todo.map(todo => /*#__PURE__*/_jsxDEV(Col, {\n        xs: {\n          size: \"auto\"\n        },\n        children: [\" \", /*#__PURE__*/_jsxDEV(Card, {\n          className: \"m-1\",\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n              tag: \"h5\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(CardText, {\n              children: [todo.description, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(EditTodo, {\n              todos: todo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              onClick: () => deleteTodo(todo.todo_id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)\n        }, todo.todo_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)]\n      }, todo.todo_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)).reverse()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListTodos, \"eKHWQUnbLvXTn70pxBWLD18DT00=\");\n\n_c = ListTodos;\nexport default ListTodos;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTodos\");","map":{"version":3,"sources":["D:/Developing/WebDev/pern-todo/client/src/components/ListTodo.js"],"names":["React","useState","useEffect","Fragment","Card","Col","CardText","Container","Row","CardBody","CardTitle","Spinner","Button","EditTodo","ListTodos","todo","setTodos","isLoading","setLoading","getTodos","response","fetch","jsonData","json","err","console","error","message","deleteTodo","id","respone","method","filter","todo_id","ToasterElement","createElement","map","size","description","reverse"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\r\nimport {\r\n  Card,\r\n  Col,\r\n  CardText,\r\n  Container,\r\n  Row,\r\n  CardBody,\r\n  CardTitle,\r\n  Spinner,\r\n} from \"reactstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport EditTodo from \"./EditTodo\";\r\n\r\nconst ListTodos = () => {\r\n  const [todo, setTodos] = useState([]);\r\n  const [isLoading, setLoading] = useState(true);\r\n  const getTodos = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/todos\");\r\n      const jsonData = await response.json();\r\n      setTodos(jsonData);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n  const deleteTodo = async (id) => {\r\n    try {\r\n      const respone = await fetch(`http://localhost:5000/todos/${id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n      setTodos(todo.filter((todo) => todo.todo_id !== id));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTodos();\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Container>\r\n        <Row className=\"justify-content-center\">\r\n          {\" \"}\r\n          <Spinner color=\"primary\" />\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n  const ToasterElement = React.createElement(\"div\", {}, \"toaster is here\");\r\n\r\n  return (\r\n    <Fragment>\r\n      <ToasterElement />\r\n      <Row>\r\n        {\" \"}\r\n        {todo\r\n          .map((todo) => (\r\n            <Col xs={{ size: \"auto\" }} key={todo.todo_id}>\r\n              {\" \"}\r\n              <Card className=\"m-1\" key={todo.todo_id}>\r\n                <CardBody>\r\n                  <CardTitle tag=\"h5\">Description</CardTitle>{\" \"}\r\n                  <CardText>{todo.description} </CardText>\r\n                  <EditTodo todos={todo} />\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    onClick={() => deleteTodo(todo.todo_id)}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          ))\r\n          .reverse()}\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ListTodos;\r\n"]},"metadata":{},"sourceType":"module"}