{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Developing\\\\WebDev\\\\pern-todo\\\\client\\\\src\\\\components\\\\InputTodo.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Toast } from \"react-bootstrap\";\n\nconst InputTodo = () => {\n  _s();\n\n  const [description, setDescription] = useState(\"\");\n  const [showA, setShowA] = useState(false);\n  const rootElement = document.getElementById(\"root\");\n\n  const toggleShowA = () => setShowA(!showA);\n\n  const onSubmitForm = async e => {\n    e.preventDefault();\n\n    if (description === \"\") {\n      toggleShowA();\n      console.log(\"no input\");\n    } else try {\n      const body = {\n        description\n      };\n      const response = await fetch(\"http://localhost:5000/todos\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      window.location = \"/\";\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const handelInput = e => {\n    const {\n      value\n    } = e.target;\n    setDescription(value);\n  };\n\n  const ToasterAlert = () => {\n    /*#__PURE__*/\n    _jsxDEV(Toast, {\n      \"aria-live\": \"polite\",\n      \"aria-atomic\": \"true\",\n      style: {\n        position: \"absolute\",\n        minHeight: \"100px\",\n        display: \"block\"\n      },\n      show: showA,\n      onClose: toggleShowA,\n      children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"holder.js/20x20?text=%20\",\n          className: \"rounded mr-2\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"mr-auto\",\n          children: \"Bootstrap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"11 mins ago\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n        children: \"Woohoo, you're reading this text in a Toast!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"d-flex\",\n      onSubmit: onSubmitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control mr-1\",\n        value: description,\n        onChange: handelInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/ReactDOM.createPortal(Toast, container)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputTodo, \"mk2au0QiXEg5k/+wlbfUcRRXIk4=\");\n\n_c = InputTodo;\nexport default InputTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputTodo\");","map":{"version":3,"sources":["D:/Developing/WebDev/pern-todo/client/src/components/InputTodo.js"],"names":["React","Fragment","useState","ReactDOM","Toast","InputTodo","description","setDescription","showA","setShowA","rootElement","document","getElementById","toggleShowA","onSubmitForm","e","preventDefault","console","log","body","response","fetch","method","headers","JSON","stringify","window","location","err","error","message","handelInput","value","target","ToasterAlert","position","minHeight","display","createPortal","container"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { Toast } from \"react-bootstrap\";\r\n\r\nconst InputTodo = () => {\r\n  const [description, setDescription] = useState(\"\");\r\n  const [showA, setShowA] = useState(false);\r\n  const rootElement = document.getElementById(\"root\");\r\n\r\n  const toggleShowA = () => setShowA(!showA);\r\n  const onSubmitForm = async (e) => {\r\n    e.preventDefault();\r\n    if (description === \"\") {\r\n      toggleShowA();\r\n      console.log(\"no input\");\r\n    } else\r\n      try {\r\n        const body = { description };\r\n        const response = await fetch(\"http://localhost:5000/todos\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        });\r\n        window.location = \"/\";\r\n      } catch (err) {\r\n        console.error(err.message);\r\n      }\r\n  };\r\n\r\n  const handelInput = (e) => {\r\n    const { value } = e.target;\r\n    setDescription(value);\r\n  };\r\n  const ToasterAlert = () => {\r\n    <Toast\r\n      aria-live=\"polite\"\r\n      aria-atomic=\"true\"\r\n      style={{\r\n        position: \"absolute\",\r\n        minHeight: \"100px\",\r\n        display: \"block\",\r\n      }}\r\n      show={showA}\r\n      onClose={toggleShowA}\r\n    >\r\n      <Toast.Header>\r\n        <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\r\n        <strong className=\"mr-auto\">Bootstrap</strong>\r\n        <small>11 mins ago</small>\r\n      </Toast.Header>\r\n      <Toast.Body>Woohoo, you're reading this text in a Toast!</Toast.Body>\r\n    </Toast>;\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <form className=\"d-flex\" onSubmit={onSubmitForm}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control mr-1\"\r\n          value={description}\r\n          onChange={handelInput}\r\n        />\r\n        <button className=\"btn btn-success\">Add</button>\r\n      </form>\r\n\r\n      {ReactDOM.createPortal(Toast, container)}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default InputTodo;\r\n"]},"metadata":{},"sourceType":"module"}