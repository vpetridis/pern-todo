{"ast":null,"code":"import React, { Component } from \"react\";\nimport { Card, Container, Row, Col, CardText, CardBody, CardTitle, CardSubtitle, Button, Spinner } from \"reactstrap\";\nimport EditTodo from \"./EditTodo\"; // export default class ListTodo extends Component {\n//   state = { todo: [{ todo_id: null, description: \"\" }], isLoading: false };\n//   componentDidMount() {\n//     //READ THE ANSWER HERE: https://stackoverflow.com/questions/55324088/why-do-i-have-to-refresh-page-manually-after-delete\n//     this.setState({ isLoading: true });\n//     fetch(\"http://localhost:5000/todos\")\n//       .then((res) => res.json())\n//       .then((result) =>\n//         this.setState({ todo: result, isLoading: false }, console.log(result))\n//       );\n//   }\n//   deleteTodo = async (id) => {\n//     const { todo } = this.state;\n//     try {\n//       const deleteTodo = await fetch(`http://localhost:5000/todos/${id}`, {\n//         method: \"DELETE\",\n//       });\n//       this.setState({ todo: todo.filter((todo) => todo.todo_id !== id) });\n//     } catch (err) {\n//       console.error(err.message);\n//     }\n//   };\n//   updateDescription = (childData) => {\n//     this.setState({ todo: childData });\n//     //create fetch PUT METHOD\n//   };\n//   render() {\n//     if (this.state.isLoading) {\n//       return (\n//         <Container>\n//           <Row className=\"justify-content-center\">\n//             {\" \"}\n//             <Spinner color=\"primary\" />\n//           </Row>\n//         </Container>\n//       );\n//     }\n//     return (\n//       <div>\n//         {this.state.todo.map((todo) => (\n//           <Card key={todo.todo_id}>\n//             <CardBody>\n//               <CardTitle tag=\"h5\">Description</CardTitle>{\" \"}\n//               <CardText>{todo.description} </CardText>\n//               <EditTodo updateDescription={this.updateDescription} />\n//               <Button\n//                 color=\"danger\"\n//                 onClick={() => this.deleteTodo(todo.todo_id)}\n//               >\n//                 Delete\n//               </Button>\n//             </CardBody>\n//           </Card>\n//         ))}\n//       </div>\n//     );\n//   }\n// }","map":{"version":3,"sources":["D:/Developing/WebDev/pern-todo/client/src/components/ListTodo.js"],"names":["React","Component","Card","Container","Row","Col","CardText","CardBody","CardTitle","CardSubtitle","Button","Spinner","EditTodo"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,IADF,EAEEC,SAFF,EAGEC,GAHF,EAIEC,GAJF,EAKEC,QALF,EAMEC,QANF,EAOEC,SAPF,EAQEC,YARF,EASEC,MATF,EAUEC,OAVF,QAWO,YAXP;AAYA,OAAOC,QAAP,MAAqB,YAArB,C,CAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Button,\r\n  Spinner,\r\n} from \"reactstrap\";\r\nimport EditTodo from \"./EditTodo\";\r\n\r\n// export default class ListTodo extends Component {\r\n//   state = { todo: [{ todo_id: null, description: \"\" }], isLoading: false };\r\n\r\n//   componentDidMount() {\r\n//     //READ THE ANSWER HERE: https://stackoverflow.com/questions/55324088/why-do-i-have-to-refresh-page-manually-after-delete\r\n//     this.setState({ isLoading: true });\r\n\r\n//     fetch(\"http://localhost:5000/todos\")\r\n//       .then((res) => res.json())\r\n//       .then((result) =>\r\n//         this.setState({ todo: result, isLoading: false }, console.log(result))\r\n//       );\r\n//   }\r\n//   deleteTodo = async (id) => {\r\n//     const { todo } = this.state;\r\n//     try {\r\n//       const deleteTodo = await fetch(`http://localhost:5000/todos/${id}`, {\r\n//         method: \"DELETE\",\r\n//       });\r\n\r\n//       this.setState({ todo: todo.filter((todo) => todo.todo_id !== id) });\r\n//     } catch (err) {\r\n//       console.error(err.message);\r\n//     }\r\n//   };\r\n//   updateDescription = (childData) => {\r\n//     this.setState({ todo: childData });\r\n//     //create fetch PUT METHOD\r\n//   };\r\n\r\n//   render() {\r\n//     if (this.state.isLoading) {\r\n//       return (\r\n//         <Container>\r\n//           <Row className=\"justify-content-center\">\r\n//             {\" \"}\r\n//             <Spinner color=\"primary\" />\r\n//           </Row>\r\n//         </Container>\r\n//       );\r\n//     }\r\n//     return (\r\n//       <div>\r\n//         {this.state.todo.map((todo) => (\r\n//           <Card key={todo.todo_id}>\r\n//             <CardBody>\r\n//               <CardTitle tag=\"h5\">Description</CardTitle>{\" \"}\r\n//               <CardText>{todo.description} </CardText>\r\n//               <EditTodo updateDescription={this.updateDescription} />\r\n//               <Button\r\n//                 color=\"danger\"\r\n//                 onClick={() => this.deleteTodo(todo.todo_id)}\r\n//               >\r\n//                 Delete\r\n//               </Button>\r\n//             </CardBody>\r\n//           </Card>\r\n//         ))}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}