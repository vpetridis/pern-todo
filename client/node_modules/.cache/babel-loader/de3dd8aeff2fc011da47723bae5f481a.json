{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Developing\\\\WebDev\\\\pern-todo\\\\client\\\\src\\\\components\\\\EditTodo.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { Component, useState } from \"react\";\nimport { Button } from \"reactstrap\";\nimport { Modal } from \"react-bootstrap\";\nimport ListTodos from \"./ListTodo\";\n\nconst MyVerticallyCenteredModal = props => {\n  _s();\n\n  const [description, setDescription] = useState(props.todo);\n\n  const updateTodo = () => {//   const response = fetch(`http:\\\\localhost:5000\\todo${id}`, {\n    //     method: \"PUT\",\n    //   });\n    //   setDescription(response);\n  };\n\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(Modal, { ...props,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"m-4\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: updateTodo,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyVerticallyCenteredModal, \"rZsXOmSel4tuWzG9cv93mWBs2Gk=\");\n\n_c = MyVerticallyCenteredModal;\n\nfunction EditTodo(props) {\n  _s2();\n\n  const [modalShow, setModalShow] = useState(false);\n  const [todo, setTodo] = useState(props.todo);\n\n  const multiFunc = () => {\n    setModalShow(true);\n\n    const saveData = () => {\n      setTodo({\n        todo: props.todo\n      });\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"mr-2\",\n      color: \"warning\",\n      onClick: multiFunc,\n      children: [\"Edit\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyVerticallyCenteredModal, {\n      show: modalShow,\n      onHide: () => setModalShow(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(EditTodo, \"pm3dhEOveXiOahm9mnmfi0OFcqg=\");\n\n_c2 = EditTodo;\nexport default EditTodo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyVerticallyCenteredModal\");\n$RefreshReg$(_c2, \"EditTodo\");","map":{"version":3,"sources":["D:/Developing/WebDev/pern-todo/client/src/components/EditTodo.js"],"names":["React","Component","useState","Button","Modal","ListTodos","MyVerticallyCenteredModal","props","description","setDescription","todo","updateTodo","console","log","EditTodo","modalShow","setModalShow","setTodo","multiFunc","saveData"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,yBAAyB,GAAIC,KAAD,IAAW;AAAA;;AAC3C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAACK,KAAK,CAACG,IAAP,CAA9C;;AAEC,QAAMC,UAAU,GAAG,MAAM,CAC1B;AACA;AACA;AACA;AACC,GALA;;AAMHC,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AAEE,sBACE,QAAC,KAAD,OACMA,KADN;AAEE,IAAA,IAAI,EAAC,IAFP;AAGE,uBAAgB,+BAHlB;AAIE,IAAA,QAAQ,MAJV;AAAA,4BAME,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA,6BACE,QAAC,KAAD,CAAO,KAAP;AAAa,QAAA,EAAE,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,eASE,QAAC,KAAD,CAAO,IAAP;AAAA,6BACE;AAAM,QAAA,SAAS,EAAC,KAAhB;AAAA,+BACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,SAAS,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF,eAcE,QAAC,KAAD,CAAO,MAAP;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAEI,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAnCD;;GAAML,yB;;KAAAA,yB;;AAqCN,SAASQ,QAAT,CAAkBP,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;AACF,QAAM,CAACQ,IAAD,EAAOO,OAAP,IAAkBf,QAAQ,CAACK,KAAK,CAACG,IAAP,CAAhC;;AACE,QAAMQ,SAAS,GAAG,MAAM;AACtBF,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,UAAMG,QAAQ,GAAG,MAAM;AACvBF,MAAAA,OAAO,CAAC;AAACP,QAAAA,IAAI,EAAEH,KAAK,CAACG;AAAb,OAAD,CAAP;AACC,KAFD;AAGD,GALD;;AAQA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,MAAlB;AAAyB,MAAA,KAAK,EAAC,SAA/B;AAAyC,MAAA,OAAO,EAAEQ,SAAlD;AAAA,yBACO,GADP;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,yBAAD;AACE,MAAA,IAAI,EAAEH,SADR;AAEE,MAAA,MAAM,EAAE,MAAMC,YAAY,CAAC,KAAD;AAF5B;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AAYD;;IAvBQF,Q;;MAAAA,Q;AAyBT,eAAeA,QAAf","sourcesContent":["import React, { Component, useState } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport ListTodos from \"./ListTodo\";\r\n\r\nconst MyVerticallyCenteredModal = (props) => {\r\n  const [description, setDescription] = useState(props.todo);\r\n\r\n   const updateTodo = () => {\r\n  //   const response = fetch(`http:\\\\localhost:5000\\todo${id}`, {\r\n  //     method: \"PUT\",\r\n  //   });\r\n  //   setDescription(response);\r\n  };\r\nconsole.log(props);\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">Edit</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <form className=\"m-4\">\r\n          <input type=\"text\" className=\"form-control\"  />\r\n        </form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button color=\"primary\" onClick={updateTodo}>\r\n         \r\n          Save\r\n       \r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nfunction EditTodo(props) {\r\n  const [modalShow, setModalShow] = useState(false);\r\nconst [todo, setTodo] = useState(props.todo)\r\n  const multiFunc = () => {\r\n    setModalShow(true);\r\n    const saveData = () => {\r\n    setTodo({todo: props.todo})\r\n    };\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Button className=\"mr-2\" color=\"warning\" onClick={multiFunc}>\r\n        Edit{\" \"}\r\n      </Button>\r\n\r\n      <MyVerticallyCenteredModal \r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditTodo;\r\n"]},"metadata":{},"sourceType":"module"}