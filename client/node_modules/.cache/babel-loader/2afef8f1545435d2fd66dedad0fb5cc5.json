{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Developing\\\\WebDev\\\\pern-todo\\\\client\\\\src\\\\components\\\\ListTodo.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport \"../App.css\";\nimport { Card, Col, CardText, Container, Row, CardBody, CardTitle, Spinner, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"reactstrap\";\nimport { Button } from \"react-bootstrap\";\nimport EditTodo from \"./EditTodo\";\n\nconst ListTodos = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [todo, setTodos] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  const [color, setColor] = useState(\"\");\n\n  const changeColor = e => {\n    setColor({\n      color: e\n    });\n  };\n\n  const ChooseColor = props => {\n    _s();\n\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n\n    const toggle = () => setDropdownOpen(prevState => !prevState);\n\n    return /*#__PURE__*/_jsxDEV(Dropdown, {\n      style: {\n        position: \"absolute\",\n        bottom: \"-1\"\n      },\n      isOpen: dropdownOpen,\n      toggle: toggle,\n      children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n        class: \"Dropdown\",\n        color: \"primary\",\n        caret: true,\n        children: \"Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n        children: [/*#__PURE__*/_jsxDEV(DropdownItem, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"bg-black\",\n            children: \"black\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n          children: \"Blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n          children: \"Green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(ChooseColor, \"z5Nkh6K+y+CV4vT0AOyJ2ID9tJg=\");\n\n  const getTodos = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/todos\");\n      const jsonData = await response.json();\n      setTodos(jsonData);\n      setLoading(false);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const deleteTodo = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/todos/${id}`, {\n        method: \"DELETE\"\n      });\n      setTodos(todo.filter(todo => todo.todo_id !== id));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    getTodos();\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(Spinner, {\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n  const ToasterElement = /*#__PURE__*/React.createElement(\"div\");\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [\" \", todo.map(todo => /*#__PURE__*/_jsxDEV(Col, {\n        xs: {\n          size: \"auto\"\n        },\n        children: [\" \", /*#__PURE__*/_jsxDEV(Card, {\n          body: true,\n          color: color,\n          className: \"m-1\",\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n              tag: \"h5\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(CardText, {\n              children: [todo.description, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(EditTodo, {\n                className: \"m-2\",\n                todos: todo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n                className: \"m-1\",\n                variant: \"danger\",\n                onClick: () => deleteTodo(todo.todo_id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 21\n              }, this), \" \", /*#__PURE__*/_jsxDEV(ChooseColor, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this)\n        }, todo.todo_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this)]\n      }, todo.todo_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)).reverse()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(ListTodos, \"KBtiHaNQXloH72hAhXJVVv8tuFw=\");\n\n_c = ListTodos;\nexport default ListTodos;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTodos\");","map":{"version":3,"sources":["D:/Developing/WebDev/pern-todo/client/src/components/ListTodo.js"],"names":["React","useState","useEffect","Fragment","Card","Col","CardText","Container","Row","CardBody","CardTitle","Spinner","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Button","EditTodo","ListTodos","todo","setTodos","isLoading","setLoading","color","setColor","changeColor","e","ChooseColor","props","dropdownOpen","setDropdownOpen","toggle","prevState","position","bottom","getTodos","response","fetch","jsonData","json","err","console","error","message","deleteTodo","id","method","filter","todo_id","ToasterElement","createElement","map","size","description","reverse"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\r\nimport \"../App.css\";\r\n\r\nimport {\r\n  Card,\r\n  Col,\r\n  CardText,\r\n  Container,\r\n  Row,\r\n  CardBody,\r\n  CardTitle,\r\n  Spinner,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport EditTodo from \"./EditTodo\";\r\n\r\nconst ListTodos = () => {\r\n  const [todo, setTodos] = useState([]);\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [color, setColor] = useState(\"\");\r\n\r\n  const changeColor = (e) => {\r\n    setColor({ color: e });\r\n  };\r\n\r\n  const ChooseColor = (props) => {\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n    const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n\r\n    return (\r\n      <Dropdown style={{position: \"absolute\", bottom:\"-1\"}} isOpen={dropdownOpen} toggle={toggle}>\r\n        <DropdownToggle class=\"Dropdown\"color=\"primary\" caret>\r\n          Color\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem><div class=\"bg-black\">black</div></DropdownItem>\r\n          <DropdownItem>Blue</DropdownItem>\r\n          <DropdownItem>Green</DropdownItem>\r\n        </DropdownMenu>\r\n      </Dropdown>\r\n    );\r\n  };\r\n\r\n  const getTodos = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/todos\");\r\n      const jsonData = await response.json();\r\n      setTodos(jsonData);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n  const deleteTodo = async (id) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/todos/${id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n      setTodos(todo.filter((todo) => todo.todo_id !== id));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTodos();\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Container>\r\n        <Row className=\"justify-content-center\">\r\n          {\" \"}\r\n          <Spinner color=\"primary\" />\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n  const ToasterElement = React.createElement(\"div\");\r\n\r\n  return (\r\n    <Fragment>\r\n      <Row>\r\n        {\" \"}\r\n        {todo\r\n          .map((todo) => (\r\n            <Col xs={{ size: \"auto\" }} key={todo.todo_id}>\r\n              {\" \"}\r\n              <Card body color={color} className=\"m-1\" key={todo.todo_id}>\r\n                <CardBody>\r\n                  <CardTitle tag=\"h5\">Description</CardTitle>{\" \"}\r\n                  <CardText>{todo.description} </CardText>\r\n                  <Row>\r\n                    {\" \"}\r\n                    <EditTodo className=\"m-2\" todos={todo} />{\" \"}\r\n                    <Button\r\n                      className=\"m-1\"\r\n                      variant=\"danger\"\r\n                      onClick={() => deleteTodo(todo.todo_id)}\r\n                    >\r\n                      Delete\r\n                    </Button>{\" \"}\r\n                    <ChooseColor />\r\n                  </Row>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          ))\r\n          .reverse()}\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ListTodos;\r\n"]},"metadata":{},"sourceType":"module"}